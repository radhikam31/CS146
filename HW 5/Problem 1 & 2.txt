### Problem 1: Solving Recurrences

1. **T(N) = 2T(N-1) + 1**:
   - Time complexity: \( O(2^N) \)

2. **T(N) = 3T(N-1) + N**:
   - Time complexity: \( O(3^N) \)

3. **T(N) = 9T(N/2) + N^2**:
   - Time complexity: \( O(N^2 \log N) \)

4. **T(N) = 100T(N/2) + N^(log2(cN) + 1)**:
   - Time complexity: \( O(N^{2}) \)

5. **T(N) = 4T(N/2) + N^2 log N**:
   - Time complexity: \( O(N^2 \log N) \)

6. **T(N) = 5T(N/2) + N^2 / log N**:
   - Time complexity: \( O(N^2) \)

### Problem 2: Recurrence Relation

The recurrence relation:
\[ T(N) = 20T(N/2) + N \]

Time complexity: \( O(N \log N) \)

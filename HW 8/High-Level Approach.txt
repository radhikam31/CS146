High-Level Approach
To find the length of the longest palindrome that can be built using the characters in the given string, we can use a frequency counting approach.

Count Character Frequencies: Iterate through the string and count the frequency of each character. We can use a hashmap (or an array of size 128 for ASCII characters) to store the frequency of each character.

Calculate Length of Palindrome:

Initialize a variable maxLength to store the length of the longest palindrome.
Iterate through the character frequencies.
For each character frequency, if it is even, we can include all occurrences of that character in the palindrome. So, we add its frequency to maxLength.
If the frequency is odd, we can include all occurrences of that character except one (to make the palindrome symmetrical). So, we add frequency - 1 to maxLength.
If there is any character with an odd frequency, we can include one occurrence of it in the center of the palindrome. So, we add 1 to maxLength.
Handle Edge Case: If there are no characters with odd frequency, the longest palindrome will have all characters with even frequency. In this case, maxLength will be equal to the length of the input string.

Return Result: Return maxLength as the length of the longest palindrome that can be built using the characters in the given string.